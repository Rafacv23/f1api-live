---
interface Props {
    fpResults: any
    fpSession: "fp1" | "fp2" | "fp3"
}

const { fpResults, fpSession } = Astro.props;

const results = fpResults?.races?.[`${fpSession}Results`]

// Function to generate positions based on time
const generatePositions = (results: any[]): any[] => {
    return results
        .map((result: any) => ({ ...result, time: result.time }))
        .sort((a, b) => a.time - b.time) // Sort by time
        .map((result, index) => ({ ...result, position: index + 1 })); // Assign position based on sorted order
};

const processedResults = generatePositions(results);

---
<div class="relative overflow-x-auto">
<table class="table-auto w-full mb-4">
    <thead class="border-b bg-secondary text-primary">
        <tr>
            <th class="py-4">Position</th>
            <th>Driver</th>
            <th>Team</th>
            <th>Time</th>
        </tr>
    </thead>
    <tbody>
        {processedResults.map((result: any) => 
  <tr class="border-b">
    <td class="py-4">{result.position}</td>
    <td>{result.driver.name} {result.driver.surname}</td>
    <td>{result.team.teamName}</td>
    <td>{result.time}</td>
  </tr>
    )}
    </tbody>
</table>
</div>