---
import CalendarNav from "@/components/navigation/CalendarNav.astro";
import QualyTable from "@/components/QualyTable.astro";
import SessionNav from "@/components/navigation/SessionNav.astro";
import Layout from "@/layouts/Layout.astro";
import { f1api } from "@/lib/f1Api";
import { checkSprint, formatDate } from "@/lib/utils";
import { SITE_NAME } from "@/lib/constants";

const { year, round } = Astro.params;

// retrieve qualifying results
let qualy;
let raceInfo

if(year && round){
    raceInfo = await f1api.getRaceInfo({year: parseInt(year), round: parseInt(round)})

    try {
        qualy = await f1api.getQualyResults({year: parseInt(year), round: parseInt(round)})
    } catch (error) {
        console.error(`Qualifying results not found for ${year}, round ${round}`);
    }
}

const haveSprint = checkSprint(raceInfo)
---

<Layout title=`${raceInfo?.race[0]?.raceName} Qualifying | ${SITE_NAME}` description=`Formula 1 qualifying results of the ${raceInfo?.race[0]?.raceName} race.`>
    <div>
        {year ? <CalendarNav year={parseInt(year)} /> : null}
        {raceInfo?.race.map((race) => 
        <h1 class="my-4">Qualifying - {race?.circuit.country} {year}</h1>
        <p>{formatDate(race?.schedule.qualy.date)}, {race?.circuit.circuitName}, Round {race?.round}</p>
        <SessionNav year={year} round={round} haveSprint={haveSprint} />
        )}
    </div>
    {qualy ? (
        <div class="mb-8 mx-4 md:mx-auto">
        <h2 class="mb-2 text-xl">Qualifying</h2>
        <QualyTable qualyResults={qualy} />
        </div>
    ) : (
        <p>Session data is not available at the moment.</p>
    )}
</Layout>