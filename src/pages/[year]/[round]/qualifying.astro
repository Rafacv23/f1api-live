---
import CalendarNav from "@/components/CalendarNav.astro";
import QualyTable from "@/components/QualyTable.astro";
import SessionNav from "@/components/SessionNav.astro";
import Layout from "@/layouts/Layout.astro";
import { f1api } from "@/lib/f1Api";
import { checkSprint, formatDate } from "@/lib/utils";

const { year, round } = Astro.params;

// retrieve qualifying results
let qualy;
let raceInfo

if(year && round){
    raceInfo = await f1api.getRaceInfo({year: parseInt(year), round: parseInt(round)})

    try {
        qualy = await f1api.getQualyResults({year: parseInt(year), round: parseInt(round)})
    } catch (error) {
        console.error(`Qualifying results not found for ${year}, round ${round}`);
    }
}

const haveSprint = checkSprint(raceInfo)
---

<Layout>
    <div class="mb-8">
      {year ? <CalendarNav year={parseInt(year)} /> : null}
        {raceInfo?.race.map((race) => 
        <h1>Qualifying - {race?.circuit.country} {year}</h1>
        <SessionNav year={year} round={round} haveSprint={haveSprint} />
        <p>{formatDate(race?.schedule.qualy.date)}, {race?.circuit.circuitName}, round {race?.round}</p>
        )}
    </div>
    {qualy ? (
        <QualyTable qualyResults={qualy} />
    ) : (
        <p>Session data is not available at the moment.</p>
    )}
</Layout>