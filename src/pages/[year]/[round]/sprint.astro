---
import Layout from "@/layouts/Layout.astro";
import SessionNav from "@/components/SessionNav.astro";
import { f1api } from "@/lib/f1Api";

export async function getStaticPaths() {
  const seasons = await f1api.getSeasons({limit:1});
  const currentYear = new Date().getFullYear();

  const staticPaths = [];

  for (const season of seasons.championships) {
    if (season.year < currentYear) {
      const races = await f1api.getRacesByYear({ year: season.year });

      for (const race of races.races) {
        staticPaths.push({
          params: { year: season.year, round: race.round.toString() },
          props: { year: season.year, round: race.round.toString() },
        });
      }
    }
  }

  return staticPaths;
}

const { year, round } = Astro.params;

let qualy
let race
let raceInfo

if (year && round) {
    raceInfo = await f1api.getRaceInfo({year: year, round: parseInt(round)})
    if(raceInfo.race[0].schedule.sprintRace){
        try {
            qualy = await f1api.getSprintQualyResults({ year: year, round: parseInt(round) });
            race = await f1api.getSprintRaceResults({ year: year, round: parseInt(round) });
        } catch (error) {
            console.error(`Qualifying results not found for ${year}, round ${round}`);
        }
    }
}

---

<Layout>
    <div>
        {raceInfo?.race.map((race) => 
        <h1>Sprint - {race?.circuit.country} {year}</h1>
        <SessionNav year={year} round={round} haveSprint={true} />
        <p>{race?.schedule.race.date}, {race?.circuit.circuitName}, round {race?.round}</p>
        )}
    </div>
    {
        race ? 
        <h2>Sprint Race</h2>
        <table class="table-auto w-full mb-4">
            <thead class="border-b bg-secondary text-primary">
                <tr>
                    <th class="py-4">Position</th>
                    <th>Driver</th>
                    <th>Team</th>
                    <th>Grid</th>
                    <th>Points</th>
                </tr>
            </thead>
            <tbody>
                {race?.races.sprintRaceResults.map((result: any) => 
                <tr class="border-b">
                    <td class="py-4">{result.position}</td>
                    <td>{result.driver.name} {result.driver.surname}</td>
                    <td>{result.team.teamName}</td>
                    <td>{result.gridPosition}</td>
                    <td>{result.points}</td>
                </tr>
                )}
            </tbody>
        </table>
        <h2>Sprint Qualifying</h2>
        <table class="table-auto w-full mb-4">
            <thead class="border-b bg-secondary text-primary">
                <tr>
                    <th class="py-4">Position</th>
                    <th>Driver</th>
                    <th>Team</th>
                    <th>SQ1</th>
                    <th>SQ2</th>
                    <th>SQ3</th>
                </tr>
            </thead>
            <tbody>
                {qualy?.races.sprintQualyResults.map((result: any) => 
                <tr class="border-b">
                    <td class="py-4">{result.gridPosition}</td>
                    <td>{result.driver.name} {result.driver.surname}</td>
                    <td>{result.team.teamName}</td>
                    <td>{result.sq1}</td>
                    <td>{result.sq2}</td>
                    <td>{result.sq3}</td>
                </tr>
                )}
            </tbody>
        </table> : qualy ?         
        <h2>Sprint Qualifying</h2>
        <table class="table-auto w-full mb-4">
            <thead class="border-b bg-secondary text-primary">
                <tr>
                    <th class="py-4">Position</th>
                    <th>Driver</th>
                    <th>Team</th>
                    <th>SQ1</th>
                    <th>SQ2</th>
                    <th>SQ3</th>
                </tr>
            </thead>
            <tbody>
                {qualy?.races.sprintQualyResults.map((result: any) => 
                <tr class="border-b">
                    <td class="py-4">{result.gridPosition}</td>
                    <td>{result.driver.name} {result.driver.surname}</td>
                    <td>{result.team.teamName}</td>
                    <td>{result.sq1}</td>
                    <td>{result.sq2}</td>
                    <td>{result.sq3}</td>
                </tr>
                )}
            </tbody>
        </table> :
         <p>Session data is not available at the moment.</p>
    }
</Layout>