---
import CalendarNav from "@/components/CalendarNav.astro";
import PracticeTable from "@/components/PracticeTable.astro";
import SessionNav from "@/components/SessionNav.astro";
import Layout from "@/layouts/Layout.astro";
import { f1api } from "@/lib/f1Api";
import { checkSprint } from "@/lib/utils";

export const prerender = false; //disable static generation for current season

const { round } = Astro.params;
const currentYear = new Date().getFullYear();

// retrieve free practice sessions
let fp1;
let fp2;
let fp3;
let raceInfo;
let haveSprint: boolean | undefined;

if (round) {
  raceInfo = await f1api.getRaceInfo({ year: currentYear, round: parseInt(round) });
  haveSprint = checkSprint(raceInfo);

  try {
    fp1 = await f1api.getFp1Results({ year: currentYear, round: parseInt(round) });
    // Continue if data is available
    } catch (error) {
        // Handle case where the endpoint doesn't return results
        console.error(`FP1 results not found for ${currentYear}, round ${round}`);
    }


  if (fp1) {
    if (!haveSprint) {
      fp2 = await f1api.getFp2Results({ year: currentYear, round: parseInt(round) });
      fp3 = await f1api.getFp3Results({ year: currentYear, round: parseInt(round) });
    }
  }
}
---

<Layout>
    <div class="mb-8">
      {currentYear ? <CalendarNav year={currentYear} /> : null}
        {raceInfo?.race.map((race) => 
            <h1>Practice - {race?.circuit.country} {currentYear}</h1>
            <SessionNav year={currentYear} round={round} haveSprint={haveSprint} />
            <p>{raceInfo?.race[0]?.schedule.fp1.date}, {raceInfo?.race[0]?.circuit.circuitName}, round {raceInfo?.race[0]?.round}</p>
        )}
    </div>
    <div class="grid space-y-4">
        {fp1 ? (
            <>
              {haveSprint ? (
                <>
                  <h2>Practice 1</h2>
                  <PracticeTable fpResults={fp1} fpSession="fp1" />
                </>
              ) : (
                <>
                  <h2>Practice 3</h2>
                  {fp3 ? <PracticeTable fpResults={fp3} fpSession="fp3" /> : null}
                  <h2>Practice 2</h2>
                  {fp2 ? <PracticeTable fpResults={fp2} fpSession="fp2" /> : null}
                  <h2>Practice 1</h2>
                  <PracticeTable fpResults={fp1} fpSession="fp1" />
                </>
              )}
            </>
          ) : (
            <div>No Practice data available</div>
          )}
    </div>
</Layout>

